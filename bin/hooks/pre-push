#!/bin/sh
# FROM GRIT SUITE

source "$(dirname $0)/grit-utils.sh"

# This hook will check if any of the submodules have any changes that are not pushed upstream
# If the submodule is in a detached state, we cannot know 
# If any changes are not pushed it will abort the overall push

remote="$1"
url="$2"


submodules=$(git submodule status)
abort_push="false"
while read -r info
do
    IFS=' ' read -r sha modname heads <<< "$info"
		branch=`echo $heads| tr -d \(\) | sed 's/heads\/\(.*\)/\1/'`
		cd $modname
		modified=`git status --porcelain --untracked-files=no`
		if [ ! -z "$modified" ]; then
			warn "submodule ${modname} has modifications. Please commit your changes first"
			abort_push="true"
		fi
		
		# Check if it is in a detached state, cause if it is, we do not know if there are pending commits to push
		if o=$(git symbolic-ref -q HEAD); then # Exits with error code if detached
			detached="no"
		elif
			detached="yes"
		fi

		if [ "$detached" == "yes" ]; then
			warn "submodule ${modname} is in a detached state. Assuming it's all pushed upstream..."
		elif [ "$detached" == "no" ]  && [ "$(git rev-parse @{u})" != "$(git rev-parse --quiet HEAD)" ]; then		
			warn "submodule ${modname} has commits not pushed upstream. Push your changes first"
			abort_push="true"
		fi
		cd ..
done <<< "$submodules"

if [ "$abort_push" == "true" ]; then
	err "Aborting the push until those issues have been resolved."
	exit 1 
fi
exit 0






